name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-simulators:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        simulator: [fortiswitch, fortiap, meraki]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: simulators/${{ matrix.simulator }}/package-lock.json
    
    - name: Install dependencies
      run: |
        cd simulators/${{ matrix.simulator }}
        npm ci
    
    - name: Run linting
      run: |
        cd simulators/${{ matrix.simulator }}
        npm run lint || echo "Linting not configured, skipping"
    
    - name: Run tests
      run: |
        cd simulators/${{ matrix.simulator }}
        npm test || echo "Tests not configured, skipping"
    
    - name: Build Docker image
      run: |
        docker build -t fortinet-virtual-lab/${{ matrix.simulator }}:latest simulators/${{ matrix.simulator }}
  
  build-ui:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json
    
    - name: Install dependencies
      run: |
        cd ui
        npm ci || echo "No package-lock.json found, using npm install"
        if [ ! -f package-lock.json ]; then
          npm install
        fi
    
    - name: Run linting
      run: |
        cd ui
        npm run lint || echo "Linting not configured, skipping"
    
    - name: Run tests
      run: |
        cd ui
        npm test || echo "Tests not configured, skipping"
    
    - name: Build UI
      run: |
        cd ui
        npm run build || echo "Build script not configured, skipping"
    
    - name: Build Docker image
      run: |
        docker build -t fortinet-virtual-lab/ui:latest ui

  test-integration:
    needs: [build-simulators, build-ui]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Compose
      run: |
        docker-compose --version
    
    - name: Start containers
      run: |
        docker-compose up -d
    
    - name: Wait for services to be ready
      run: |
        sleep 30
    
    - name: Check service health
      run: |
        curl -f http://localhost:8080/api/health || exit 1
        curl -f http://localhost:8081/api/health || exit 1
        curl -f http://localhost:8082/api/health || exit 1
        curl -f http://localhost:8083/api/health || exit 1
    
    - name: Run integration tests
      run: |
        echo "Running integration tests"
        # Add integration test commands here when available
    
    - name: Stop containers
      run: |
        docker-compose down
